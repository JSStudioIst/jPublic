!function(){var i,t="function"==typeof require?require(".."):window._;QUnit.module("utility",{beforeEach:function(){i=t.clone(t.templateSettings)},afterEach:function(){t.templateSettings=i}}),QUnit.test("获取随机数：getRandom",function(i){var r=t.range(1e3),o=Math.pow(2,31),e=Math.pow(2,62);i.ok(t.every(r,function(){return t.getRandom(o,e)>=o}),"是否应该产生一个大于或等于最小值的随机数"),i.ok(t.some(r,function(){return 0<t.getRandom(Number.MAX_VALUE)}),"当传递“Number.MAX_VALUE”时，应该生成一个随机数")}),QUnit.test("字节格式化：formatBytes",function(i){i.ok("1 KB"==t.formatBytes(1024),"1KB转换正确"),i.ok("1 KB"==t.formatBytes("1024"),"1KB转换正确"),i.ok("1.21 KB"==t.formatBytes(1234),"1.21KB转换正确"),i.ok("1.205 KB"==t.formatBytes(1234,3),"1.205KB转换正确")}),QUnit.test("比较两个数值的大小：numCompare",function(i){i.ok(-1==t.numCompare(3,5),"3<5,判断正确"),i.throws(function(){t.numCompare("ab",3)},"ab与3是不同类型无法判断"),i.ok(0==t.numCompare(3,3),"3>3，两个数值相等,判断错误"),i.ok(-1==t.numCompare(.1,.11),"0.1<0.11,判断正确"),i.ok(1==t.numCompare(-1,-2),"-1>-2,判断正确"),i.ok(1==t.numCompare(0,-1),"0>-1,判断正确")}),QUnit.test("去左空格：ltrim",function(i){i.ok("abcdegfg"==t.ltrim("    abcdegfg"," "),"    abcdegfg去除左空格成功"),i.ok("dff  fad"==t.ltrim("  dff  fad"," "),"  dff  fad去除左空格成功"),i.ok("dff  fad"==t.ltrim("dff  fad"," "),"dff  fad去除左空格成功"),i.ok("_ad"==t.ltrim("_ad"," "),"_ad不含左空格")}),QUnit.test("去右空格：rtrim",function(i){i.ok("abcdegfg"==t.rtrim("abcdegfg     "," "),"abcdegfg     去除右空格成功"),i.ok("abcd  egfg"==t.rtrim("abcd  egfg     "," "),"abcd  egfg     去除右空格成功"),i.ok("abcd  egfg"==t.rtrim("abcd  egfg"," "),"abcd  egfg去除右空格成功"),i.ok("ab——"==t.rtrim("ab——"," "),"ab——不含右空格")}),QUnit.test("判断是否为数组:_.isArray",function(i){i.ok(1==t.isArray([1,2,3]),"[1,2,3]是数组"),i.ok(1==t.isArray([[1],[3]]),"[[1],[3]]是数组"),i.ok(1==t.isArray([1]),"[1]是数组"),i.ok(1==t.isArray([1],[2]),"[1],[2]是数组"),i.ok(0==t.isArray({1:2}),"{1:2}不是数组"),i.ok(0==t.isArray("a"),"字母a不是数组"),i.ok(0==t.isArray("a"),'"a"不是数组'),i.ok(0==t.isArray(123),"123不是数组"),i.ok(0==t.isArray(null),"null不是数组"),i.ok(0==t.isArray(!0),"true不是数组"),i.ok(0==t.isArray(void 0),"undefinded不是数组")}),QUnit.test("判断是否为数值： _.isNumeric",function(i){i.ok(1==t.isNumeric(123),"123是数值"),i.ok(1==t.isNumeric(83),"0123是数值"),i.ok(1==t.isNumeric("123"),'"123"是数值'),i.ok(1==t.isNumeric(0),"0是数值"),i.ok(1==t.isNumeric(123.12),"123.12是数值"),i.ok(1==t.isNumeric(123),"+123是数值"),i.ok(1==t.isNumeric(-12),"-12是数值"),i.ok(1==t.isNumeric("-12"),'"-12"是数值'),i.ok(1==t.isNumeric([1]),"[1]是数值"),i.ok(0==t.isNumeric([1,2]),"[1,2]不是数值"),i.ok(1==t.isNumeric(255),"0xFF是数值"),i.ok(1==t.isNumeric("0xFF"),'"0xFF"是数值'),i.ok(1==t.isNumeric(8e5),"8e5是数值"),i.ok(1==t.isNumeric("8e5"),'"8e5"是数值'),i.ok(0==t.isNumeric("a"),'"a"不是数值'),i.ok(0==t.isNumeric(["a"]),'["a"]不是数值'),i.ok(0==t.isNumeric({11:2}),"{11:2}不是数值"),i.ok(0==t.isNumeric(null),"null不是数值"),i.ok(0==t.isNumeric(!0),"true不是数值")})}();