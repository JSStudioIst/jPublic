!function(){var t,r="function"==typeof require?require(".."):window._;QUnit.module("utility",{beforeEach:function(){t=r.clone(r.templateSettings)},afterEach:function(){r.templateSettings=t}}),QUnit.test("获取随机数：getRandom",function(t){var e=r.range(1e3),o=Math.pow(2,31),n=Math.pow(2,62);t.ok(r.every(e,function(){return r.getRandom(o,n)>=o}),"是否应该产生一个大于或等于最小值的随机数"),t.ok(r.some(e,function(){return 0<r.getRandom(Number.MAX_VALUE)}),"当传递“Number.MAX_VALUE”时，应该生成一个随机数")}),QUnit.test("字节格式化：formatBytes",function(t){t.ok("1 KB"==r.formatBytes(1024),"1KB转换正确"),t.ok("1 KB"==r.formatBytes("1024"),"1KB转换正确"),t.ok("1.21 KB"==r.formatBytes(1234),"1.21KB转换正确"),t.ok("1.205 KB"==r.formatBytes(1234,3),"1.205KB转换正确")}),QUnit.test("比较两个数值的大小：numCompare",function(t){t.ok(-1==r.numCompare(3,5),"判断正确"),t.throws(r.numCompare("ab",3),"不同类型无法判断"),t.ok(0==r.numCompare(3,3),"两个数值相等"),t.ok(-1==r.numCompare(.1,.11),"判断正确"),t.ok(1==r.numCompare(-1,-2),"判断正确"),t.ok(1==r.numCompare(0,-1),"判断正确")}),QUnit.test("字符串空判断：isNullOrEmpty",function(t){function e(t){return!t}t.ok(e("   "),"非空字符串判断正确"),t.ok(e({className:"测试班",name:"我是张三",age:18}.skill),"非空字符串判断正确"),t.ok(e(null),"非空字符串判断正确"),t.ok(e("undefined"),"非空字符串判断正确")})}();